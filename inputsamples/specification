CIT-BACH仕様
【作者】土屋達弘
【日付】2012/11/26
【バージョン】1.01

【実行方法】
java -jar program.jar [オプション 引数] [オプション 引数] [オプション 引数] ...

(JRE 1.6以上)

■オプション

-i ファイル名: モデルファイルの指定．指定がない場合は，標準入力．

-s ファイル名: シードファイル(原型シート)の指定．指定がない場合は用いない．

-o ファイル名: 出力ファイルの指定．指定がない場合は，標準出力．

-c 引数: 基本の組合せ強度の指定．引数は2から5の整数，または文字列でall．
allの場合，全網羅．指定がない場合は2.

-random 引数：疑似乱数の種の指定：引数は整数．指定がない場合は，実行毎に
異なる値を利用．-cオプションででall指定時は無視．

-repeat 引数：くり返しテスト生成して最良のものを出力するときのくり返し数
の指定．引数は1以上の整数．疑似乱数の種が-randomで指定されているときは，
一回目のくり返しでその値を使う．指定がない場合は1(くり返さない)．-cオプ
ションででall指定時は無視．

-policy: ライセンス情報

例．java -jar program.jar -i model.txt -c all
入力モデルがmodel.txt，全網羅のテスト集合を標準出力に出す．

【ファイルのコード】
sjis．日本語の利用は可能．

【出力ファイル書式】

■基本事項
正常出力もエラー出力も -o で指定されたファイルに出力される．

形式はcsv (Comma Separated Value)とし，一行目は常にコメントとする．

■正常終了時

□1行目には，正常終了を表す記号(#SUCCESS)，以下の様に，結果を得た時の乱数
の種，実行時のオプションが出力される．

#SUCCESS,結果を得た時の乱数の種,i,モデルファイル名,s,シードファイル名,o,
出力ファイル名,c,強度,random,乱数の種,repeat,くり返し数

例．java -jar program.jar -i model.txt -c 2 

この場合，2941が乱数の種として選ばれたとして，1行目は以下の通りとなる．
#SUCCESS,2941,i,model.txt,s,,o,,c,2,random,2941,repeat,1

□2行目は，因子の名前が入る．

例．OS,メモリ,CPU,Disk,Disk2

□3行目以降は，1行ごとがテストケース

例．Windows7,4GB,Corei7,SDD,SDD

■エラー時

□1行目のみからなり，エラー終了を表す記号(#ERROR)とエラーメッセージが出
力される．

例．#ERROR,無効なオプションが指定されています．

【モデルファイル書式】
■まず例を示す．

-----------------------------------------------------------------------------
# #以降，改行までコメントと見なす．

OS (Windows7 Windows7_64 Vista) 
メモリ (4GB 2GB 1GB 8GB)
CPU ( Corei7  Corei5 Atom )
Disk (SDD HDD)
Disk2 (SDD HDD)

# グループ化→3網羅以上のため
{OS メモリ Disk}  {メモリ Disk CPU}

# 制約(禁則)を列挙
(if (== [メモリ] 8GB) (or (== Vista [OS]) (<> [OS] Windows7)))

(ite (== [Disk] [Disk2]) (== [メモリ] 4GB) (<> [メモリ] 2GB))

(not (and (<> [OS] Windows7_64) (== 8GB [メモリ])))
-----------------------------------------------------------------------------
■コメント
「#」以降，改行まではコメントとみなす．

■因子の設定
まず因子を設定する．形式は，
  因子 (値1 値2 ....  )

■グループの設定（省略可能）
因子の設定の後，グループを記述する．これは{と}でパラメータをくくる．グル
ープの因子に関しては全網羅される．基本の組合せ強度（-cオプション）より小
さいグループは無視される．

■制約の設定（省略可能）

制約（禁則）を列挙する．各制約はブール値の式であらわし，各テストケースで，
それらすべてが真にならないといけないことをあらわす．上の例であれば，制約
は三つである．

制約は括弧付きの前置記法（ポーランド記法）で表す．演算子は以下の通りであ
る．

□論理演算子（ブール値の式に対する演算．結果はブール値．）
単項演算子：not
２項演算子：==，<>, if
３項演算子：ite (if-then-elseの意味)
多項演算子：or, and 

□算術演算子（因子の値に対する演算．結果はブール値）
==, <> 

因子名は[]で囲む．例えば，[メモリ]など．

算術演算子で，因子とその因子の値だけでなく，因子同士の値の比較も可能であ
る．例えば，
  (if (== [A] [B]) (<> [B] [C]))
は，「AとBが等しいなら，BとCは異なる」ということを表す．
また，
  (== [A] [B]) 
だけなら，「AとBが常に等しい」ことを表す．

■使用できない文字など

スペース，タブ，改行文字はすべてセパレータとする．

因子名，値名には文字として，( ) { } [ ] , ; を含むことはできない．

因子名と値名が重複することは可能である．また，if, and, orなどの演算子と
同じ名前も用いることができる．

【シードファイル(原型シート)書式】

■基本事項
形式はcsv (Comma Separated Value)とする．ただし，#で始まる行はコメントと
する．

■因子
コメント以外の最初の行に因子を記述する．

例．OS,メモリ,CPU,Disk,Disk2

モデルと不一致がある場合はエラーとなる．

■テストケース
コメント以外の2行目以降，1行毎がテストケースとなる．

例．Windows7,4GB,Corei7,SDD,SDD

値がモデルに含まれていない場合はエラーとなる．

テストケースは，値が未定の因子があってもよい．

例．Windows7,,Corei7,,SDD
